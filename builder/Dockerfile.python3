ARG PREFIX="ewallet-builder"
FROM $PREFIX-base

ARG PYTHON3_VERSION="3.6.7"
ARG PYTHON3_DOWNLOAD_SHA256="81fd1401a9d66533b0a3e9e3f4ea1c7c6702d57d5b90d659f971e6f1b745f77d"

RUN set -xe \
 && apk add --no-cache --virtual .python3-build \
        bzip2-dev \
        coreutils \
        dpkg \
        dpkg-dev \
        expat-dev \
        findutils \
        gcc \
        gdbm-dev \
        libc-dev \
        libffi-dev \
        libressl \
        libressl-dev \
        linux-headers \
        make \
        ncurses-dev \
        pax-utils \
        readline-dev \
        sqlite-dev \
        tcl-dev \
        tk \
        tk-dev \
        xz-dev \
        zlib-dev \
 && PYTHON3_DOWNLOAD_URL="https://www.python.org/ftp/python/${PYTHON3_VERSION%%[a-z]*}/Python-$PYTHON3_VERSION.tar.xz" \
 && curl -fsL -o python3-src.tar.xz "${PYTHON3_DOWNLOAD_URL}" \
 && echo "${PYTHON3_DOWNLOAD_SHA256}  python3-src.tar.xz" |sha256sum -c - \
 && mkdir -p /usr/local/src/python3 \
 && tar -xJC /usr/local/src/python3 --strip-components=1 -f python3-src.tar.xz \
 && rm python3-src.tar.xz \
 && ( \
        cd /usr/local/src/python3 \
            && ./configure \
                   --prefix=/usr/local/python3 \
                   --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
                   --enable-loadable-sqlite-extensions \
                   --enable-shared \
                   --with-system-expat \
                   --with-system-ffi \
                   --without-ensurepip \
            && make -j$(nproc) EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000" \
            && make install \
    ) \
 && rm -rf /usr/local/src/python3 \
 && scanelf --nobanner -E ET_EXEC -BF '%F' --recursive /usr/local/python3 | xargs -r strip --strip-all \
 && scanelf --nobanner -E ET_DYN -BF '%F' --recursive /usr/local/python3 | xargs -r strip --strip-unneeded \
 && PYTHON3_RUN_DEPS="$( \
        find /usr/local/python3 -type f -executable -not \( -name '*tkinter*' \) -exec \
            scanelf --needed --nobanner --format '%n#p' '{}' ';' \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e /usr/local/python3/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )" \
 && apk add --update --no-cache --virtual .python3-run \
        $PYTHON3_RUN_DEPS \
        ca-certificates \
 && apk del .python3-build \
 && find /usr/local/python3 -depth \( \
            \( -type d -a \( -name test -o -name tests \) \) \
            -o \
            \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
        \) -exec rm -rf \{\} \;

RUN cd /usr/local/python3/bin \
 && ln -s idle3 idle \
 && ln -s pydoc3 pydoc \
 && ln -s python3 python \
 && ln -s python3-config python-config

ENV LD_LIBRARY_PATH=/usr/local/python3/lib:$LD_LIBRARY_PATH
ENV PATH=/usr/local/python3/bin:$PATH

ARG PYTHON3_PIP_VERSION="18.1"
ARG PYTHON3_PIPENV_VERSION="2018.10.13"

RUN set -xe \
 && apk add --no-cache --virtual .python3-pip-build libressl \
 && curl -fsL -o get-pip.py "https://bootstrap.pypa.io/get-pip.py" \
 && python3 get-pip.py \
        --disable-pip-version-check \
        --no-cache-dir \
        "pip==$PYTHON3_PIP_VERSION" \
 && pip3 install "pipenv==$PYTHON3_PIPENV_VERSION" \
 && rm -f get-pip.py \
 && find /usr/local/python3 -depth \( \
            \( -type d -a \( -name test -o -name tests \) \) \
            -o \
            \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
        \) -exec rm -rf \{\} \;
